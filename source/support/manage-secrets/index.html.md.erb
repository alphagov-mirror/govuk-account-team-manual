---
title: Manage secrets
weight: 35
last_reviewed_on: 2021-02-11
review_in: 6 months
---

# Manage secrets

You can add, remove or rotate secrets as necessary.

This content explains:

- how secrets are stored and used in Concourse
- how to list secrets
- how to add, remove and rotate secrets

## Prerequisites

You must have production access and [install the gds-cli tool][] to manage secrets.

[install the gds-cli tool]: https://github.com/alphagov/gds-cli#installation

## How secrets are stored and used in Concourse

All of our secrets are used by our Concourse pipelines, and are stored
as Concourse secrets.

Some secrets are used by the pipeline to perform its task. For example,
[the daily statistics task][] needs an OAuth token.

Some secrets are used by an app and are set by the app's deployment task. For example, the
[GOV.UK Notify API key][].

Secrets are referenced in the Concourse configuration using `((secret
name))`. For example with the daily statistics task, the
`report-bearer-token` is a secret made available to the task through
the `BEARER_TOKEN` environment variable:

```yaml
- task: trigger-bigquery-export
  file: git-main/concourse/tasks/trigger-bigquery-export.yml
  params:
    CDN_DOMAIN: account.publishing.service.gov.uk
    BEARER_TOKEN: ((report-bearer-token))
```

## List secrets

To list secrets with names and values used by the GOV.UK account manager app, run the following in the gds-cli:

```
cf env govuk-account-manager
```

To list the names of the secrets used by all GOV.UK tools, run the following:

```
gds cd secrets ls cd-govuk-tools
```

[the daily statistics task]: https://github.com/alphagov/govuk-account-manager-prototype/blob/7e69b8cb8daec1e6e23d32374df3f8a1fa45b477/concourse/pipeline.yml#L249-L271
[GOV.UK Notify API key]: https://github.com/alphagov/govuk-account-manager-prototype/blob/5443585c3d2dd5d399efc18f126f0bdf831036b5/concourse/tasks/deploy-to-govuk-paas.yml#L59

## Add or change a secret

1. Sign into the GOV.UK London PaaS by running the following in the gds-cli:

    ```
    cf login -a api.london.cloud.service.gov.uk --sso
    ```

1. Add a new secret or change an existing secret by running the following:

    ```
    gds cd secrets add cd-govuk-tools govuk-account-manager-prototype/<secret-name> "<secret-value>"
    ```

## Remove a secret

1. Sign into the GOV.UK London PaaS by running the following in the gds-cli:

    ```
    cf login -a api.london.cloud.service.gov.uk --sso
    ```

1. Remove a secret by running the following:

    ```
    gds cd secrets rm cd-govuk-tools govuk-account-manager-prototype/<secret-name>
    ```

1. Unset the secret from the PaaS environment:

    ```
    cf unset-env govuk-account-manager <secret-name>
    ```

## Rotate a secret

If a secret expires or is compromised, you will need to rotate it. This is a currently a manual process.

If a secret is compromised, this is a security incident. Follow [the
incident management process][] as well as rotating the secret.

[the incident management process]: /incident

1. Generate a new secret value, which varies per secret.

2. Set the new value using the gds-cli:

    ```
    gds cd secrets add cd-govuk-tools <pipeline-name>/<secret-name> "<secret-value>"
    ```

3. If this is a secret used by an app, deploy the app.

### Generate new secret values

#### Secrets used by multiple pipelines

##### `grafana-api-key`

Generate a new API key in [Grafana][], and deactivate the old API key.

[Grafana]: https://grafana-paas.cloudapps.digital/org/apikeys

##### `paas-username` and `paas-password`

Change the password by [triggering a password reset][], which gets sent to the govuk-accounts-developers Google Group.

[triggering a password reset]: https://admin.london.cloud.service.gov.uk/password/request-reset

##### `sentry-dsn`

Generate a new DSN from the Sentry project settings page, which you
can reach by:

1. Navigating to the [GOV.UK Sentry organisation][].
2. Selecting the project from the drop-down list.
3. Clicking the cog icon next to the project name.

[GOV.UK Sentry organisation]: https://sentry.io/organizations/govuk

##### `slack_webhook_url`

Tell IT Support, through the [Web Helpdesk][], that our Slack webhook
has been leaked, and that we need a new one.

[Web Helpdesk]: https://gdshelpdesk.digital.cabinet-office.gov.uk

#### Secrets used by the account manager

##### `basic-auth-username` and `basic-auth-password`

These are arbitrary strings. After changing them, update the
"deployed applications" Trello card.

##### `bigquery-credentials-production`

Generate new JSON credentials in the [Google Cloud Console][], and
deactivate the old credentials.

[Google Cloud Console]: https://console.cloud.google.com/iam-admin/serviceaccounts?orgonly=true&project=govuk-account-analysis-db&supportedpurview=project

##### `notify-api-key-production` and `notify-api-key-staging`

Generate a new API key from [GOV.UK Notify][], and deactivate the old
API key.

[GOV.UK Notify]: https://www.notifications.service.gov.uk/

##### `oidc-pepper-production` and `oidc-pepper-staging`

Generate an arbitrary string using `rake secret`.

This secret is used to [generate subject identifiers][], and so
rotating it will cause services to see a new subject identifier for a
returning user. This means that services will not be able to identify
returning users, and will treat them as new users.

If this secret needs to be rotated, we will need to engage with other
services, so that they can migrate their data.

[generate subject identifiers]: https://github.com/alphagov/govuk-account-manager-prototype/blob/7e69b8cb8daec1e6e23d32374df3f8a1fa45b477/config/initializers/doorkeeper_openid_connect.rb#L34-L36

##### `oidc-signing-key-production` and `oidc-signing-key-staging`

Generate a new RSA private key.

##### `password-pepper-production` and `password-pepper-staging`

Generate an arbitrary string using `rake secret`.

This secret is used to [hash account passwords][], and so rotating it
will invalidate all of the current passwords. This means that users
will have to reset their password to log in.

If this secret needs to be rotated on short notice, we may want to
send an email to all users explaining the problem. If it can be
rotated over a longer period, we could rehash passwords when users log
in, and only disable the old value when most users have been changed.
This is a feature which would need to be implemented.

[hash account passwords]: https://github.com/alphagov/govuk-account-manager-prototype/blob/7e69b8cb8daec1e6e23d32374df3f8a1fa45b477/config/initializers/devise.rb#L128-L129

##### `report-bearer-token-production`

Generate a new OAuth token in the Account Manager with the
`reporting_access` scope, and expire the old token.

##### `secret-key-base-production` and `secret-key-base-staging`

Generate an arbitrary string with `rake secret`.

This secret is used to sign session cookies, and so rotating it will
log out all users.

##### `zendesk-api-username` and `zendesk-api-key`

Tell User Support, in the `#user-support` Slack channel, that our
Zendesk credentials have been leaked, and that we need new ones.

#### Secrets used by the attribute service

##### `account-manager-token-production` and `account-manager-token-staging`

Generate a new OAuth token in the Account Manager with the
`deanonymise_tokens` scope, and expire the old token.
